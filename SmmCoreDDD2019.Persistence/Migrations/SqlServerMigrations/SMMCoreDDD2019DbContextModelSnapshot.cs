// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmmCoreDDD2019.Persistence;

namespace SmmCoreDDD2019.Persistence.Migrations.SqlServerMigrations
{
    [DbContext(typeof(SMMCoreDDD2019DbContext))]
    partial class SMMCoreDDD2019DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Account");

                    b.Property<int>("AccountingDataMataUangId")
                        .HasColumnType("int")
                        .HasColumnName("AccountingDataMataUangId");

                    b.Property<int?>("Depth")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Depth");

                    b.Property<string>("Kelompok")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Kelompok");

                    b.Property<string>("KodeAccount")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("KodeAccount");

                    b.Property<int?>("Lft")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Lft");

                    b.Property<int?>("NormalPos")
                        .HasColumnType("int")
                        .HasColumnName("NormalPos");

                    b.Property<string>("Parent")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Parent");

                    b.Property<int?>("Rgt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Rgt");

                    b.HasKey("Id");

                    b.HasIndex("AccountingDataMataUangId")
                        .IsUnique();

                    b.ToTable("AccountingDataAccount", "Accounting");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataBuktiTransaksi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountingTipeJournalId")
                        .HasColumnType("int");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Keterangan");

                    b.Property<string>("NoBukti")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NoBukti");

                    b.Property<DateTime>("TanggalInput")
                        .HasColumnType("datetime")
                        .HasColumnName("TanggalInput");

                    b.Property<decimal>("Total")
                        .HasColumnType("money")
                        .HasColumnName("Total");

                    b.Property<string>("ValidateBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ValidateBy");

                    b.Property<DateTime>("ValidatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("ValidatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AccountingTipeJournalId")
                        .IsUnique();

                    b.ToTable("AccountingDataBuktiTransaksi", "Accounting");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountingDataAccountId")
                        .HasColumnType("int");

                    b.Property<int>("AccountingDataJournalHeaderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Debit")
                        .HasColumnType("money")
                        .HasColumnName("Debit");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("Keterangan");

                    b.Property<decimal?>("Kredit")
                        .HasColumnType("money")
                        .HasColumnName("Kredit");

                    b.HasKey("Id");

                    b.HasIndex("AccountingDataAccountId")
                        .IsUnique();

                    b.HasIndex("AccountingDataJournalHeaderId")
                        .IsUnique();

                    b.ToTable("AccountingDataJournal", "Accounting");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataJournalHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountingDataPeriodeId")
                        .HasColumnType("int");

                    b.Property<int>("AccountingTipeJournalId")
                        .HasColumnType("int");

                    b.Property<string>("Aktif")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Aktif");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Keterangan");

                    b.Property<string>("NoBuktiJournal")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("NoBuktiJournal");

                    b.Property<DateTime>("TanggalInput")
                        .HasColumnType("datetime")
                        .HasColumnName("TanggalInput");

                    b.Property<string>("UserInput")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("UserInput");

                    b.Property<DateTime>("Validasi")
                        .HasColumnType("datetime")
                        .HasColumnName("Validasi");

                    b.Property<string>("ValidasiOleh")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ValidasiOleh");

                    b.HasKey("Id");

                    b.HasIndex("AccountingDataPeriodeId")
                        .IsUnique();

                    b.HasIndex("AccountingTipeJournalId")
                        .IsUnique();

                    b.ToTable("AccountingDataJournalHeader", "Accounting");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataKurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MataUangID")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("MataUangID");

                    b.Property<decimal>("Nilai")
                        .HasColumnType("money")
                        .HasColumnName("Nilai");

                    b.Property<DateTime>("TanggalInput")
                        .HasColumnType("datetime")
                        .HasColumnName("TanggalInput");

                    b.HasKey("Id");

                    b.ToTable("AccountingDataKurs", "Accounting");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataMataUang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Kode");

                    b.Property<string>("Nama")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nama");

                    b.HasKey("Id");

                    b.ToTable("AccountingDataMataUang", "Accounting");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataPeriode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Berakhir")
                        .HasColumnType("datetime")
                        .HasColumnName("Berakhir");

                    b.Property<string>("IsAktif")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("IsAktif");

                    b.Property<DateTime>("Mulai")
                        .HasColumnType("datetime")
                        .HasColumnName("Mulai");

                    b.Property<string>("UserInput")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserInput");

                    b.HasKey("Id");

                    b.ToTable("AccountingDataPeriode", "Accounting");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataSaldoAwal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountingDataAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountingDataMataUangId")
                        .HasColumnType("int");

                    b.Property<int>("AccountingDataPeriodeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Debet")
                        .HasColumnType("money")
                        .HasColumnName("Debet");

                    b.Property<decimal>("Kredit")
                        .HasColumnType("money")
                        .HasColumnName("Kredit");

                    b.Property<decimal>("NilaiKurs")
                        .HasColumnType("money")
                        .HasColumnName("NilaiKurs");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("money")
                        .HasColumnName("Saldo");

                    b.Property<DateTime>("TanggalInput")
                        .HasColumnType("datetime")
                        .HasColumnName("TanggalInput");

                    b.Property<string>("UserInput")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserInput");

                    b.HasKey("Id");

                    b.HasIndex("AccountingDataAccountId")
                        .IsUnique();

                    b.HasIndex("AccountingDataPeriodeId")
                        .IsUnique();

                    b.ToTable("AccountingDataSaldoAwal", "Accounting");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingTipeJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KodeJournal")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NamaJournal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NamaJournal");

                    b.HasKey("Id");

                    b.ToTable("AccountingTipeJournal", "Accounting");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.BPKBDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NoBpkb")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NoBPKB");

                    b.Property<int?>("PermohonanFakturDBId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TanggalTerimaBPKB")
                        .HasColumnType("datetime")
                        .HasColumnName("TglTerimaBPKB");

                    b.HasKey("Id");

                    b.HasIndex("PermohonanFakturDBId")
                        .IsUnique()
                        .HasFilter("[PermohonanFakturDBId] IS NOT NULL");

                    b.ToTable("BPKBDB", "Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.CustomerDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alamat")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AlamatKirim")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("Faks")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Handphone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Jual")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Kecamatan")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Kelurahan")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("KodeBidangPekerjaan")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("KodeBidangUsaha")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("KodePos")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Kota")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nama")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaBPKB")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NamaBPKB");

                    b.Property<string>("NamaBidangPekerjaan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaBidangUsaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NoKodeCustomer")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("NoKodeCustomer");

                    b.Property<string>("NoKtp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Propinsi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelpKantor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("TglInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("TglLahir")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserIDPeg")
                        .HasColumnType("int")
                        .HasColumnName("UserIDPeg");

                    b.Property<string>("UserInput")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("CustomerDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKonsumenAvalist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agama")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("AgamaPenjamin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("AlamatKTP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AlamatKantor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AlamatKantorPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AlamatKtpPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AlamatPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AlamatSurat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AlamatTinggalK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AlamatUsaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AlamatUsahaPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmailPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FaxKantor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FaxKantorPenjamin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FaxUsaha")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FaxUsahaPenjamin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HubunganPenjamin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("JabatanPerusahaan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("JenisKelamin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("JenisKelaminPenjamin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("JmlKaryawanPenjamin")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("JumlahKaryawan")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("KecamatanK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanKTP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanKantor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanKantorPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanKtpPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanSurat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanUsaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanUsahaPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanKTP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanKantor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanKantorPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanKtpPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanSurat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanUsaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanUsahaPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KodeBidangUsaha")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KodeBidangUsahaIbuKandung")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KodeBidangUsahaPenjamin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KodePekerjaan")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KodePekerjaanIbuKandung")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KodePekerjaanPenjamin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KodePosKTP")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KodePosKTPPenjamin")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KodePosKantor")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KodePosKantorPenjamin")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KodePosPenjamin")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KodePosSurat")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KodePosTinggalK")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KodePosUsaha")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KodePosUsahaPenjamin")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KotaK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaKTP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaKantor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaKantorPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaKtpPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaSurat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaUsaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaUsahaPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaBidangUsaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaBidangUsahaIbuKandung")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaBidangUsahaPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaIbuKandung")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaKantor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaKantorPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaKonsumen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaPekerjaan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaPekerjaanIbuKandung")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaPekerjaanPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaUsaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaUsahaPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NoHandphone")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NoHandphone2")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NoHandphonePenjamin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NoHandphonePenjamin2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NoKTP")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NoKTPPenjamin")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NoNPWPUsahaPenjamin")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("NoNpwpusaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NoRegisterKonsumen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NoSIUPusahaPenjamin")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("NoSiupusaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NoTDPUsahaPenjamin")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("NoTDPusaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiKTP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiKantor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiKantorPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiKtpPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiSurat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiUsaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiUsahaPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SkalaUsaha")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("SkalaUsahaPenjamin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("StatusNikah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("StatusNikahPenjamin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime?>("TanggalExpireKTP")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TanggalExpireKTPPenjamin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TanggalLahirPenjamin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TanggalMulaiUsaha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TanggalRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Tanggallahir")
                        .HasColumnType("datetime");

                    b.Property<string>("TelpKantor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelpKantorPenjamin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelpRumah")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("TelpRumahPenjamin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelpUsaha")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelpUsahaPenjamin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TempatLahir")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TempatLahirPenjamin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TingkatPendidikan")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("TingkatPendidikanPenjamin")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("DataKonsumenAvalist", "DataAvalist");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakAngsuran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Angsuran")
                        .HasColumnType("money");

                    b.Property<int?>("AngsuranKe")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<decimal?>("BiayaAdministrasi")
                        .HasColumnType("money");

                    b.Property<decimal?>("Bunga")
                        .HasColumnType("money");

                    b.Property<int?>("CaraBayar")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("DataKontrakKreditId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Denda")
                        .HasColumnType("money");

                    b.Property<decimal?>("DiskonDenda")
                        .HasColumnType("money");

                    b.Property<decimal?>("JumlahPembayaran")
                        .HasColumnType("money");

                    b.Property<string>("NoKwitansi")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PenagihId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<decimal?>("Pokok")
                        .HasColumnType("money");

                    b.Property<decimal?>("SisaBunga")
                        .HasColumnType("money");

                    b.Property<decimal?>("SisaPokok")
                        .HasColumnType("money");

                    b.Property<DateTime?>("TanggalAngsuran")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TanggalBayarAngsuran")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TitipanAngsuran")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("DataKontrakKreditId")
                        .IsUnique();

                    b.ToTable("DataKontrakAngsuran", "DataAvalist");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakAsuransi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BiayaAsuransi")
                        .HasColumnType("money");

                    b.Property<int>("DataKontrakKreditId")
                        .HasColumnType("int");

                    b.Property<int?>("JenisAsuransi")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("KodeAsuransi")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("LamaAsuransi")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("MasterPerusahaanAsuransiId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NilaiPertanggungan")
                        .HasColumnType("money");

                    b.Property<string>("NoRegistrasiKontrakAsuransi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TanggalAkhirAsuransi")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TanggalMulaiAsuransi")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("DataKontrakKreditId")
                        .IsUnique();

                    b.HasIndex("MasterPerusahaanAsuransiId")
                        .IsUnique();

                    b.ToTable("DataKontrakAsuransi", "DataAvalist");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakKredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Administrasi")
                        .HasColumnType("money");

                    b.Property<decimal?>("AngsuranBulanan")
                        .HasColumnType("money");

                    b.Property<string>("AngsuranDimuka")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<decimal?>("Asuransi")
                        .HasColumnType("money");

                    b.Property<decimal?>("BiayaAdministrasiAngsuran")
                        .HasColumnType("money");

                    b.Property<decimal?>("BungaEff")
                        .HasColumnType("decimal(8,5)");

                    b.Property<decimal?>("BungaFlat")
                        .HasColumnType("decimal(8,5)");

                    b.Property<string>("CaraBayar")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<int>("DataKontrakSurveiId")
                        .HasColumnType("int");

                    b.Property<decimal?>("HargaBarang")
                        .HasColumnType("money");

                    b.Property<int?>("LamaKredit")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<decimal?>("NilaiBunga")
                        .HasColumnType("money");

                    b.Property<decimal?>("NilaiKontrak")
                        .HasColumnType("money");

                    b.Property<string>("NoRegisterKontrakKredit")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PenagihId")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<decimal?>("PinjamanPokok")
                        .HasColumnType("money");

                    b.Property<string>("PolaAngsuran")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TanggalAngsuranBulanan")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("TanggalKontrak")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("UangMuka")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("DataKontrakSurveiId")
                        .IsUnique();

                    b.ToTable("DataKontrakKredit", "DataAvalist");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakKreditAngsuranDemo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AngsKe")
                        .HasColumnType("int")
                        .HasColumnName("AngsKe");

                    b.Property<decimal?>("Angsuran")
                        .HasColumnType("money");

                    b.Property<decimal?>("BiayaAdm")
                        .HasColumnType("money");

                    b.Property<decimal?>("Bunga")
                        .HasColumnType("money");

                    b.Property<int?>("CaraBayar")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<decimal?>("Denda")
                        .HasColumnType("money");

                    b.Property<decimal?>("DiskonDenda")
                        .HasColumnType("money");

                    b.Property<string>("NoKwitansi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PenagihId")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<decimal?>("Pokok")
                        .HasColumnType("money");

                    b.Property<decimal?>("SisaBunga")
                        .HasColumnType("money");

                    b.Property<decimal?>("SisaPokok")
                        .HasColumnType("money");

                    b.Property<DateTime?>("TglAngsuran")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TglByrAngsuran")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TitipanAngsuran")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("DataKontrakKreditAngsuranDemo", "DataAvalist");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakSurvei", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlamatMendesak")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AtapRumah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<int>("DataKonsumenAvalistId")
                        .HasColumnType("int");

                    b.Property<string>("DayaListrikRumah")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DindingRumah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("FasilitasKreditBank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GarasiRumah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("HandphoneMendesak")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HandphoneMendesak2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HasilSurvei")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("HubunganDenganMendesak")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("JenisFasilitasbank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("KapasitasGarasiRumah")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Karakter")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KecamatanMendesak")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanMendesak")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kerjasama")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KeteranganLain")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("KodeBidangPekerjaan")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KodeBidangUsaha")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KodePosMendesak")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KondisiFisikRumah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KondisiJalanRumah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("KotaMendesak")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kulkas")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("LantaiRumah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("LokasiSurvei")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("LokasiTempatTinggal")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("LuasRumah")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LuasTanah")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LuasUsaha")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("MasterBarangDBId")
                        .HasColumnType("int");

                    b.Property<string>("NamaBidangPekerjaan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaBidangUsaha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaMendesak")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaRekeningBank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NoRegistrasiDataSurvei")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NoRekeningBank")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("OmzetBulanan")
                        .HasColumnType("money");

                    b.Property<string>("PagarRumah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<decimal?>("PengeluaranTetapBulanan")
                        .HasColumnType("money");

                    b.Property<decimal?>("Penghasilan")
                        .HasColumnType("money");

                    b.Property<decimal?>("PenghasilanPasangan")
                        .HasColumnType("money");

                    b.Property<decimal?>("Penghasilanlain")
                        .HasColumnType("money");

                    b.Property<string>("PernahKredit")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("PropinsiMendesak")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SegmenRumah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("StatusTempatTinggal")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("SurveiId")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal?>("TagihanPDAM")
                        .HasColumnType("money");

                    b.Property<decimal?>("TagihanPLN")
                        .HasColumnType("money");

                    b.Property<decimal?>("TagihanTelp")
                        .HasColumnType("money");

                    b.Property<string>("TamanRumah")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime?>("TanggalSurvei")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Tanggungan")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("TelevisiRumah")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("TelpMendesak")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TinggalSejak")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("ToiletRumah")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("DataKonsumenAvalistId")
                        .IsUnique();

                    b.HasIndex("MasterBarangDBId")
                        .IsUnique();

                    b.ToTable("DataKontrakSurvei", "DataAvalist");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aktif")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ApplicationUserId");

                    b.Property<string>("NoRegistrasiPegawai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NoRegistrasiPegawai");

                    b.Property<DateTime?>("TglBerhentiKerja")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TglInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("TglMulaiKerja")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DataPegawai", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataAbsensi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<int>("DataPegawaiJenisAbsensiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JamAbsensi")
                        .HasColumnType("datetime")
                        .HasColumnName("JamAbsensi");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique();

                    b.HasIndex("DataPegawaiJenisAbsensiId")
                        .IsUnique();

                    b.ToTable("DataPegawaiDataAbsensi", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataAward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwardTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique();

                    b.ToTable("DataPegawaiDataAward", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataJabatan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<int?>("MasterJenisJabatanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TglBerhentiMenjabat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TglMenjabat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique()
                        .HasFilter("[DataPegawaiId] IS NOT NULL");

                    b.HasIndex("MasterJenisJabatanId")
                        .IsUnique()
                        .HasFilter("[MasterJenisJabatanId] IS NOT NULL");

                    b.ToTable("DataPegawaiDataJabatan", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataKeluarga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agama")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AlamatK")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("alamatK");

                    b.Property<int?>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<string>("EmergencyCall")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Handphone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HubunganK")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("JenisKelamin")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("KecamatanK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("kelurahanK");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("KodePosK")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("KotaK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaK")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("NoKtp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NoKTP");

                    b.Property<string>("Pekerjaan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PendidikanTerakhir")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiK")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TempatLahir")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TglInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Tgllahir")
                        .HasColumnType("datetime")
                        .HasColumnName("Tgllahir");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique()
                        .HasFilter("[DataPegawaiId] IS NOT NULL");

                    b.ToTable("DataPegawaiDataKeluarga", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataOrmas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlamatOrmas")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("AlamatOrmas");

                    b.Property<int?>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<string>("Jabatan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Jabatan");

                    b.Property<string>("JenisKegiatan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("KotaOrmas")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaOrmas")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TelpOrmas")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TelpOrmas");

                    b.Property<DateTime?>("TglInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique()
                        .HasFilter("[DataPegawaiId] IS NOT NULL");

                    b.ToTable("DataPegawaiDataOrmas", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataPribadi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agama")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AlamatKTP")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("AlamatKTP");

                    b.Property<string>("AlamatRumah")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GolonganDarah")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Handphone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Handphone2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Handphone2");

                    b.Property<string>("JenisKelamin")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("KecamatanKTP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KecamatanKTP");

                    b.Property<string>("KecamatanRumah")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("KelurahanKTP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KelurahanKTP");

                    b.Property<string>("KelurahanRumah")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("KodePos")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("KodePos");

                    b.Property<string>("KodePosKTP")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("KodePosKTP");

                    b.Property<string>("KotaKTP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KotaKTP");

                    b.Property<string>("KotaRumah")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaBelakang")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("NamaDepan")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("NamaTengah")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("NoKTP")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NoKTP");

                    b.Property<string>("PropinsiKTP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PropinsiKTP");

                    b.Property<string>("PropinsiRumah")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StatusKawin")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("StatusTempatTinggal")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime?>("TanggalLahir")
                        .HasColumnType("datetime");

                    b.Property<string>("Telp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TempatLahir")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("TglInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique()
                        .HasFilter("[DataPegawaiId] IS NOT NULL");

                    b.ToTable("DataPegawaiDataPribadi", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataRiwayatPekerjaan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AkhirBekerja")
                        .HasColumnType("datetime");

                    b.Property<string>("AlamatP")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AtasanP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GajiTerakhir")
                        .HasColumnType("money");

                    b.Property<string>("JabatanAkhir")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("JabatanAkhir");

                    b.Property<string>("JabatanAwal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KelurahanP");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("KodePosP")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("KotaP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("KotaP");

                    b.Property<DateTime?>("MulaiBekerja")
                        .HasColumnType("datetime");

                    b.Property<string>("NamaPerusahaan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PropinsiP");

                    b.Property<string>("TelpP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TglInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique()
                        .HasFilter("[DataPegawaiId] IS NOT NULL");

                    b.ToTable("DataPegawaiDataRiwayatPekerjaan", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataRiwayatPelatihan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlamatLembaga")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("AlamatLembaga");

                    b.Property<string>("BidangPelatihan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<string>("DibiayaiOleh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LamaKursus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaLembaga")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelpLembaga")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TelpLembaga");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique()
                        .HasFilter("[DataPegawaiId] IS NOT NULL");

                    b.ToTable("DataPegawaiDataRiwayatPelatihan", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataRiwayatPendidikan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<string>("Jurusan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Kota")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Kota");

                    b.Property<string>("NamaSekolah")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TahunLulus")
                        .HasColumnType("int");

                    b.Property<string>("TingkatPend")
                        .HasColumnType("nchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique()
                        .HasFilter("[DataPegawaiId] IS NOT NULL");

                    b.ToTable("DataPegawaiDataRiwayatPendidikan", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataPegawaiId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("image");

                    b.Property<string>("KodeBarcode")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Revisi")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("revisi");

                    b.Property<DateTime?>("Tglinput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("DataPegawaiId")
                        .IsUnique()
                        .HasFilter("[DataPegawaiId] IS NOT NULL");

                    b.ToTable("DataPegawaiFoto", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiJenisAbsensi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("JamBerakhir")
                        .HasColumnType("datetime")
                        .HasColumnName("JamBerakhir");

                    b.Property<DateTime>("JamMulai")
                        .HasColumnType("datetime")
                        .HasColumnName("JamMulai");

                    b.Property<string>("JenisAbsensi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("JenisAbsensi");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Keterangan");

                    b.HasKey("Id");

                    b.ToTable("DataPegawaiJenisAbsensi", "DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPerusahaan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlamatP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cs")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("CS");

                    b.Property<string>("Kec")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KodePos")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Kota")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NamaP")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NoRegDataPerusahaan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NoRegDataPerusahaan");

                    b.Property<string>("Propinsi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telp")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("DataPerusahaan", "DataPerusahaan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPerusahaanCabang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alamat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Alamat");

                    b.Property<string>("Cp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CP");

                    b.Property<int>("DataPerusahaanId")
                        .HasColumnType("int");

                    b.Property<string>("Kec")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KodePos")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Kota")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NamaPosisi")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Propinsi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Telp");

                    b.HasKey("Id");

                    b.HasIndex("DataPerusahaanId")
                        .IsUnique();

                    b.ToTable("DataPerusahaanCabang", "DataPerusahaan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPerusahaanOrgChart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Depth")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Depth");

                    b.Property<string>("KodeStrukturJabatan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KodeStrukturJabatan");

                    b.Property<int?>("Lft")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Lft");

                    b.Property<string>("NamaStrukturJabatan")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NamaStrukturJabatan");

                    b.Property<string>("Parent")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Parent");

                    b.Property<int?>("Rgt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Rgt");

                    b.HasKey("Id");

                    b.ToTable("DataPerusahaanOrgChart", "DataPerusahaan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPerusahaanStrukturJabatan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Depth")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Depth");

                    b.Property<string>("KodeStruktur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KodeStruktur");

                    b.Property<int?>("Lft")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Lft");

                    b.Property<string>("NamaStrukturJabatan")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NamaStrukturJabatan");

                    b.Property<string>("Parent")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Parent");

                    b.Property<int?>("Rgt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Rgt");

                    b.HasKey("Id");

                    b.ToTable("DataPerusahaanStrukturJabatan", "DataPerusahaan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKBaruDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LokasiSpk")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LokasiSpk");

                    b.Property<string>("NoRegistrasiSPK")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NoRegistrasiSPK");

                    b.Property<string>("Terinput")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime?>("TglInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Tolak")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("UserIdpeg")
                        .HasColumnType("int");

                    b.Property<string>("UserInput")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("DataSPKBaruDB", "DataSPKBaruDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKKendaraanDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataSPKBaruDBId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterBarangDBId")
                        .HasColumnType("int");

                    b.Property<string>("NamaSTNK")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NamaSTNK");

                    b.Property<string>("NoKtpSTNK")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NoKtpSTNK");

                    b.Property<string>("TahunPerakitan")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("tahunPerakitan");

                    b.Property<string>("Warna")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)");

                    b.HasKey("Id");

                    b.HasIndex("DataSPKBaruDBId")
                        .IsUnique()
                        .HasFilter("[DataSPKBaruDBId] IS NOT NULL");

                    b.HasIndex("MasterBarangDBId")
                        .IsUnique()
                        .HasFilter("[MasterBarangDBId] IS NOT NULL");

                    b.ToTable("DataSPKKendaraanDB", "DataSPKBaruDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKKreditDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BBN")
                        .HasColumnType("money")
                        .HasColumnName("BBN");

                    b.Property<decimal?>("BiayaAdministrasiKredit")
                        .HasColumnType("money");

                    b.Property<decimal?>("BiayaAdministrasiTunai")
                        .HasColumnType("money");

                    b.Property<decimal?>("DPPriceList")
                        .HasColumnType("money")
                        .HasColumnName("DPPricelist");

                    b.Property<int?>("DataSPKBaruDBId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DendaWilayah")
                        .HasColumnType("money");

                    b.Property<decimal?>("DiskonDP")
                        .HasColumnType("money")
                        .HasColumnName("DiskonDP");

                    b.Property<decimal?>("DiskonTunai")
                        .HasColumnType("money");

                    b.Property<decimal?>("Komisi")
                        .HasColumnType("money");

                    b.Property<decimal?>("OffTheRoad")
                        .HasColumnType("money");

                    b.Property<decimal?>("Promosi")
                        .HasColumnType("money");

                    b.Property<decimal?>("UangTandaJadiKredit")
                        .HasColumnType("money");

                    b.Property<decimal?>("UangTandaJadiTunai")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("DataSPKBaruDBId")
                        .IsUnique()
                        .HasFilter("[DataSPKBaruDBId] IS NOT NULL");

                    b.ToTable("DataSPKKreditDB", "DataSPKBaruDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKLeasingDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Angsuran")
                        .HasColumnType("money");

                    b.Property<int?>("DataSPKBaruDBId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterKategoriBayaranId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterKategoriPenjualanId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterLeasingCabangDBId")
                        .HasColumnType("int");

                    b.Property<string>("Mediator")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NamaCmo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NamaCMO");

                    b.Property<int?>("NoUrutSales")
                        .HasColumnType("int");

                    b.Property<int?>("Tenor")
                        .HasColumnType("int")
                        .HasColumnName("tenor");

                    b.Property<DateTime?>("TglSurvei")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("DataSPKBaruDBId")
                        .IsUnique()
                        .HasFilter("[DataSPKBaruDBId] IS NOT NULL");

                    b.HasIndex("MasterKategoriBayaranId")
                        .IsUnique()
                        .HasFilter("[MasterKategoriBayaranId] IS NOT NULL");

                    b.HasIndex("MasterKategoriPenjualanId")
                        .IsUnique()
                        .HasFilter("[MasterKategoriPenjualanId] IS NOT NULL");

                    b.HasIndex("MasterLeasingCabangDBId")
                        .IsUnique()
                        .HasFilter("[MasterLeasingCabangDBId] IS NOT NULL");

                    b.ToTable("DataSPKLeasingDB", "DataSPKBaruDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKSurveiDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlamatPemesan")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("DataSPKBaruDBId")
                        .HasColumnType("int");

                    b.Property<string>("HandphonePemesan")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("KecamatanPemesan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanPemesan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KodePosPemesan")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("KotaPemesan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaNPWP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NamaNPWP");

                    b.Property<string>("NamaPemesan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NoKtpPemesan")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NoNPWP")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NoNPWP");

                    b.Property<string>("PekerjaanPemesan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PropinsiPemesan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelpPemesan")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("DataSPKBaruDBId")
                        .IsUnique()
                        .HasFilter("[DataSPKBaruDBId] IS NOT NULL");

                    b.ToTable("DataSPKSurveiDB", "DataSPKBaruDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterAllowanceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowanceTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MasterAllowanceType");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterBarangDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aktif")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<decimal?>("BBN")
                        .HasColumnType("money")
                        .HasColumnName("BBN");

                    b.Property<string>("Cc")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CC");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("money");

                    b.Property<string>("Merek")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NamaBarang")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomorMesin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NomorRangka")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Tahun")
                        .HasColumnType("int");

                    b.Property<string>("Tipe")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TypeKendaraan")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TypeKendaraan");

                    b.HasKey("Id");

                    b.ToTable("MasterBarangDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterBidangPekerjaanDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamaMasterBidangPekerjaan")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NamaMasterBidangPekerjaan");

                    b.Property<DateTime>("TanggalInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("TanggalInput")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("MasterBidangPekerjaanDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterBidangUsahaDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamaMasterBidangUsaha")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NamaMasterBidangUsaha");

                    b.Property<DateTime>("TanggalInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("TanggalInput")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("MasterBidangUsahaDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterJenisJabatan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamaJabatan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MasterJenisJabatan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterKategoriBayaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamaKategoryBayaran")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("MasterKategoriBayaran");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterKategoriCaraPembayaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaraPembayaran")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MasterKategoriCaraPembayaran");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterKategoriPenjualan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamaKategoryPenjualan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MasterKategoriPenjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterLeasingCabangDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aktif")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Alamat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cabang")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Cabang");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Faks")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Kecamatan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kelurahan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KodePos")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Kota")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("MasterLeasingDbId")
                        .HasColumnType("int");

                    b.Property<string>("Propinsi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("MasterLeasingDbId")
                        .IsUnique();

                    b.ToTable("MasterLeasingCabangDB", "MasterLeasingDb");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterLeasingDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamaLease")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MasterLeasingDB", "MasterLeasingDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterLeaveTypeHRD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LeaveTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MasterLeaveTypeHRD", "MasterLeaveType");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterPerusahaanAsuransi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlamatAsuransi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FaxAsuransi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("KecamatanAsuransi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanAsuransi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KodeAsuransi")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("KodePosAsuransi")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("KotaAsuransi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NamaAsuransi")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PihakBerwenang")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PropinsiAsuransi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelpAsuransi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("MasterPerusahaanAsuransi", "DataAvalist");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterSupplierDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aktif")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Alamat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Faks")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Kecamatan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Kelurahan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KodePos")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Kota")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NamaSupplier")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NamaSupplier");

                    b.Property<string>("NoRegistrasiSupplier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NoRegistrasiSupplier");

                    b.Property<string>("Propinsi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("MasterSupplierDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.Pembelian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Batal")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("JenisTransPmb")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Kredit")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int?>("MasterSupplierDBId")
                        .HasColumnType("int");

                    b.Property<string>("NoRegistrasiPembelian")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NoRegistrasiPembelian");

                    b.Property<int?>("PembelianPOId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TglBeli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserInput")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserInputId")
                        .HasColumnType("int")
                        .HasColumnName("UserInputId");

                    b.HasKey("Id");

                    b.HasIndex("MasterSupplierDBId")
                        .IsUnique()
                        .HasFilter("[MasterSupplierDBId] IS NOT NULL");

                    b.HasIndex("PembelianPOId")
                        .IsUnique()
                        .HasFilter("[PembelianPOId] IS NOT NULL");

                    b.ToTable("Pembelian", "Pembelian");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PembelianDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BBN")
                        .HasColumnType("money")
                        .HasColumnName("BBN");

                    b.Property<decimal?>("Diskon")
                        .HasColumnType("money")
                        .HasColumnName("Diskon");

                    b.Property<decimal?>("Diskon2")
                        .HasColumnType("money")
                        .HasColumnName("Diskon2");

                    b.Property<decimal?>("DiskonPPN")
                        .HasColumnType("money")
                        .HasColumnName("DiskonPPN");

                    b.Property<decimal?>("Harga1")
                        .HasColumnType("money")
                        .HasColumnName("Harga1");

                    b.Property<decimal?>("HargaOffTheRoad")
                        .HasColumnType("money");

                    b.Property<decimal?>("HargaPPN")
                        .HasColumnType("money")
                        .HasColumnName("HargaPPN");

                    b.Property<int?>("MasterBarangDBId")
                        .HasColumnType("int");

                    b.Property<int>("PembelianId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("Qty");

                    b.Property<decimal?>("SellIn")
                        .HasColumnType("money")
                        .HasColumnName("SellIn");

                    b.Property<decimal?>("SellIn2")
                        .HasColumnType("money")
                        .HasColumnName("SellIn2");

                    b.Property<decimal?>("SellInPPN")
                        .HasColumnType("money")
                        .HasColumnName("SellInPPN");

                    b.HasKey("Id");

                    b.HasIndex("MasterBarangDBId")
                        .IsUnique()
                        .HasFilter("[MasterBarangDBId] IS NOT NULL");

                    b.HasIndex("PembelianId")
                        .IsUnique();

                    b.ToTable("PembelianDetail", "Pembelian");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PembelianPO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Keterangan")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("MasterSupplierDBId")
                        .HasColumnType("int");

                    b.Property<string>("NoRegistrasiPoPMB")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NoRegistrasiPoPMB");

                    b.Property<string>("PoAstra")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Terinput")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime?>("TglPo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("TglPo")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<string>("UserInput")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("MasterSupplierDBId")
                        .IsUnique()
                        .HasFilter("[MasterSupplierDBId] IS NOT NULL");

                    b.ToTable("PembelianPO", "PembelianPO");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PembelianPODetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bbn")
                        .HasColumnType("money")
                        .HasColumnName("BBn");

                    b.Property<decimal?>("Diskon")
                        .HasColumnType("money");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("MasterBarangDBId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OffTheRoad")
                        .HasColumnType("money");

                    b.Property<int?>("PembelianPOId")
                        .HasColumnType("int");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("Qty");

                    b.Property<string>("Warna")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Warna");

                    b.HasKey("Id");

                    b.HasIndex("MasterBarangDBId")
                        .IsUnique()
                        .HasFilter("[MasterBarangDBId] IS NOT NULL");

                    b.HasIndex("PembelianPOId")
                        .IsUnique()
                        .HasFilter("[PembelianPOId] IS NOT NULL");

                    b.ToTable("PembelianPODetail", "PembelianPO");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.Penjualan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Batal")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("CustomerDBId")
                        .HasColumnType("int");

                    b.Property<int?>("DataSPKBaruDBId")
                        .HasColumnType("int");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("MasterKategoriPenjualanId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterLeasingCabangDBId")
                        .HasColumnType("int");

                    b.Property<string>("Mediator")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NoBuku")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NoRegistrasiPenjualan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NoRegistrasiPenjualan");

                    b.Property<int?>("NoUrutSales")
                        .HasColumnType("int")
                        .HasColumnName("NoUrutSales");

                    b.Property<DateTime?>("TanggalPenjualan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserInput")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("USerInput");

                    b.Property<int?>("UserInputId")
                        .HasColumnType("int")
                        .HasColumnName("UserInputID");

                    b.HasKey("Id");

                    b.HasIndex("CustomerDBId")
                        .IsUnique()
                        .HasFilter("[CustomerDBId] IS NOT NULL");

                    b.HasIndex("DataSPKBaruDBId")
                        .IsUnique()
                        .HasFilter("[DataSPKBaruDBId] IS NOT NULL");

                    b.HasIndex("MasterKategoriPenjualanId")
                        .IsUnique()
                        .HasFilter("[MasterKategoriPenjualanId] IS NOT NULL");

                    b.HasIndex("MasterLeasingCabangDBId")
                        .IsUnique()
                        .HasFilter("[MasterLeasingCabangDBId] IS NOT NULL");

                    b.ToTable("Penjualan", "Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PenjualanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BBN")
                        .HasColumnType("money")
                        .HasColumnName("BBN");

                    b.Property<string>("CheckDp")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CheckDP");

                    b.Property<string>("CheckLapBulanan")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CheckLapBulanan");

                    b.Property<decimal?>("DendaWilayah")
                        .HasColumnType("money");

                    b.Property<decimal?>("DiskonKredit")
                        .HasColumnType("money");

                    b.Property<decimal?>("DiskonTunai")
                        .HasColumnType("money");

                    b.Property<decimal?>("HargaOTR")
                        .HasColumnType("money")
                        .HasColumnName("HargaOTR");

                    b.Property<decimal?>("JoinPromo1")
                        .HasColumnType("money");

                    b.Property<decimal?>("JoinPromo2")
                        .HasColumnType("money");

                    b.Property<decimal?>("Komisi")
                        .HasColumnType("money");

                    b.Property<decimal?>("OffTheRoad")
                        .HasColumnType("money")
                        .HasColumnName("OffTheRoad");

                    b.Property<int?>("PenjualanId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Promosi")
                        .HasColumnType("money");

                    b.Property<decimal?>("SPF")
                        .HasColumnType("money")
                        .HasColumnName("SPF");

                    b.Property<decimal?>("SellOut")
                        .HasColumnType("money");

                    b.Property<int?>("StokUnitId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subsidi")
                        .HasColumnType("money");

                    b.Property<DateTime?>("TanggalCheckLapBulanan")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("UangMuka")
                        .HasColumnType("money");

                    b.Property<string>("UserCheckLapBulanan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserCheckLapBulanan");

                    b.HasKey("Id");

                    b.HasIndex("PenjualanId")
                        .IsUnique()
                        .HasFilter("[PenjualanId] IS NOT NULL");

                    b.HasIndex("StokUnitId")
                        .IsUnique()
                        .HasFilter("[StokUnitId] IS NOT NULL");

                    b.ToTable("PenjualanDetail", "Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PenjualanPiutang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Keterangan")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Keterangan");

                    b.Property<int>("PenjualanDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TanggalLunas")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PenjualanDetailId")
                        .IsUnique();

                    b.ToTable("PenjualanPiutang", "Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PermohonanFakturDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alamat")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("HandphoneF")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Kecamatan")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Kelurahan")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("kelF");

                    b.Property<string>("KodePos")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Kota")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NamaFaktur")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("NoRegistrasiFaktur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NoRegistrasiFaktur");

                    b.Property<string>("NomorKTP")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NomorKTP");

                    b.Property<int?>("PenjualanDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Propinsi")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("TanggalLahir")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TanggalMohonFaktur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Telepon")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("PenjualanDetailId")
                        .IsUnique()
                        .HasFilter("[PenjualanDetailId] IS NOT NULL");

                    b.ToTable("PermohonanFakturDB", "Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.STNKDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BbnPabrik")
                        .HasColumnType("money")
                        .HasColumnName("BBnPabrik");

                    b.Property<decimal>("BiayaTambahan")
                        .HasColumnType("money");

                    b.Property<decimal>("Birojasa")
                        .HasColumnType("money");

                    b.Property<decimal>("FormA")
                        .HasColumnType("money");

                    b.Property<string>("NoStnk")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("NoSTNK");

                    b.Property<string>("NomorPlat")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<decimal?>("PajakProgresif")
                        .HasColumnType("money");

                    b.Property<decimal>("PajakStnk")
                        .HasColumnType("money");

                    b.Property<int?>("PermohonanFakturDBId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Perwil")
                        .HasColumnType("money");

                    b.Property<int?>("ProgresifKe")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TanggalBayarSTNK")
                        .IsRequired()
                        .HasColumnType("datetime")
                        .HasColumnName("TanggalBayarSTNK");

                    b.HasKey("Id");

                    b.HasIndex("PermohonanFakturDBId")
                        .IsUnique()
                        .HasFilter("[PermohonanFakturDBId] IS NOT NULL");

                    b.ToTable("STNKDB", "Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.StokUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Diskon")
                        .HasColumnType("money")
                        .HasColumnName("Diskon");

                    b.Property<decimal?>("Diskon2")
                        .HasColumnType("money")
                        .HasColumnName("Diskon2");

                    b.Property<decimal?>("DiskonPPN")
                        .HasColumnType("money")
                        .HasColumnName("DiskonPPN");

                    b.Property<string>("Faktur")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Faktur");

                    b.Property<decimal?>("Harga")
                        .HasColumnType("money")
                        .HasColumnName("Harga");

                    b.Property<decimal?>("Harga1")
                        .HasColumnType("money")
                        .HasColumnName("Harga1");

                    b.Property<decimal?>("HargaPPN")
                        .HasColumnType("money")
                        .HasColumnName("HargaPPN");

                    b.Property<string>("Jual")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Jual");

                    b.Property<string>("Kembali")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Kembali");

                    b.Property<int?>("MasterBarangDBId")
                        .HasColumnType("int");

                    b.Property<string>("NoMesin")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NoMesin");

                    b.Property<string>("NoRangka")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NoRangka");

                    b.Property<int?>("PembelianDetailId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SellIn")
                        .HasColumnType("money")
                        .HasColumnName("SellIn");

                    b.Property<decimal?>("SellIn2")
                        .HasColumnType("money")
                        .HasColumnName("SellIn2");

                    b.Property<decimal?>("SellInPPN")
                        .HasColumnType("money")
                        .HasColumnName("SellInPPN");

                    b.Property<DateTime?>("TglInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("TglInput")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Warna")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Warna");

                    b.HasKey("Id");

                    b.HasIndex("MasterBarangDBId")
                        .IsUnique()
                        .HasFilter("[MasterBarangDBId] IS NOT NULL");

                    b.HasIndex("PembelianDetailId")
                        .IsUnique()
                        .HasFilter("[PembelianDetailId] IS NOT NULL");

                    b.ToTable("StokUnit", "Pembelian");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataAccount", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.AccountingDataMataUang", null)
                        .WithOne("AccountingDataAccount")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.AccountingDataAccount", "AccountingDataMataUangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataBuktiTransaksi", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.AccountingTipeJournal", null)
                        .WithOne("AccountingDataBuktiTransaksi")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.AccountingDataBuktiTransaksi", "AccountingTipeJournalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataJournal", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.AccountingDataAccount", null)
                        .WithOne("AccountingDataJournal")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.AccountingDataJournal", "AccountingDataAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.AccountingDataJournalHeader", null)
                        .WithOne("AccountingDataJournal")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.AccountingDataJournal", "AccountingDataJournalHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataJournalHeader", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.AccountingDataPeriode", null)
                        .WithOne("AccountingDataJournalHeader")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.AccountingDataJournalHeader", "AccountingDataPeriodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.AccountingTipeJournal", null)
                        .WithOne("AccountingDataJournalHeader")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.AccountingDataJournalHeader", "AccountingTipeJournalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataSaldoAwal", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.AccountingDataAccount", null)
                        .WithOne("AccountingDataSaldoAwal")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.AccountingDataSaldoAwal", "AccountingDataAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.AccountingDataPeriode", null)
                        .WithOne("AccountingDataSaldoAwal")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.AccountingDataSaldoAwal", "AccountingDataPeriodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.BPKBDB", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.PermohonanFakturDB", null)
                        .WithOne("BPKBDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.BPKBDB", "PermohonanFakturDBId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakAngsuran", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataKontrakKredit", null)
                        .WithOne("DataKontrakAngsuran")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataKontrakAngsuran", "DataKontrakKreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakAsuransi", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataKontrakKredit", null)
                        .WithOne("DataKontrakAsuransi")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataKontrakAsuransi", "DataKontrakKreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterPerusahaanAsuransi", null)
                        .WithOne("DataKontrakAsuransi")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataKontrakAsuransi", "MasterPerusahaanAsuransiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakKredit", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataKontrakSurvei", null)
                        .WithOne("DataKontrakKredit")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataKontrakKredit", "DataKontrakSurveiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakSurvei", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataKonsumenAvalist", null)
                        .WithOne("DataKontrakSurvei")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataKontrakSurvei", "DataKonsumenAvalistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterBarangDB", null)
                        .WithOne("DataKontrakSurvei")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataKontrakSurvei", "MasterBarangDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataAbsensi", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", null)
                        .WithOne("DataPegawaiDataAbsensi")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataAbsensi", "DataPegawaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawaiJenisAbsensi", null)
                        .WithOne("DataPegawaiDataAbsensi")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataAbsensi", "DataPegawaiJenisAbsensiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataAward", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", null)
                        .WithOne("DataPegawaiDataAward")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataAward", "DataPegawaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataJabatan", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", null)
                        .WithOne("DataPegawaiDataJabatan")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataJabatan", "DataPegawaiId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterJenisJabatan", null)
                        .WithOne("DataPegawaiDataJabatan")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataJabatan", "MasterJenisJabatanId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataKeluarga", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", null)
                        .WithOne("DataPegawaiDataKeluarga")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataKeluarga", "DataPegawaiId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataOrmas", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", null)
                        .WithOne("DataPegawaiDataOrmas")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataOrmas", "DataPegawaiId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataPribadi", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", "DataPegawai")
                        .WithOne("DataPegawaiDataPribadi")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataPribadi", "DataPegawaiId");

                    b.Navigation("DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataRiwayatPekerjaan", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", "DataPegawai")
                        .WithOne("DataPegawaiDataRiwayatPekerjaan")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataRiwayatPekerjaan", "DataPegawaiId");

                    b.Navigation("DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataRiwayatPelatihan", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", null)
                        .WithOne("DataPegawaiDataRiwayatPelatihan")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataRiwayatPelatihan", "DataPegawaiId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataRiwayatPendidikan", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", "DataPegawai")
                        .WithOne("DataPegawaiDataRiwayatPendidikan")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiDataRiwayatPendidikan", "DataPegawaiId");

                    b.Navigation("DataPegawai");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiFoto", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPegawai", null)
                        .WithOne("DataPegawaiFoto")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPegawaiFoto", "DataPegawaiId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPerusahaanCabang", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataPerusahaan", null)
                        .WithOne("DataPerusahaanCabang")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataPerusahaanCabang", "DataPerusahaanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKKendaraanDB", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataSPKBaruDB", null)
                        .WithOne("DataSPKKendaraanDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataSPKKendaraanDB", "DataSPKBaruDBId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterBarangDB", null)
                        .WithOne("DataSPKKendaraanDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataSPKKendaraanDB", "MasterBarangDBId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKKreditDB", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataSPKBaruDB", null)
                        .WithOne("DataSPKKreditDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataSPKKreditDB", "DataSPKBaruDBId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKLeasingDB", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataSPKBaruDB", null)
                        .WithOne("DataSPKLeasingDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataSPKLeasingDB", "DataSPKBaruDBId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterKategoriBayaran", "MasterKategoriBayaran")
                        .WithOne("DataSPKLeasingDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataSPKLeasingDB", "MasterKategoriBayaranId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterKategoriPenjualan", "MasterKategoriPenjualan")
                        .WithOne("DataSPKLeasingDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataSPKLeasingDB", "MasterKategoriPenjualanId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterLeasingCabangDB", "MasterLeasingCabangDB")
                        .WithOne("DataSPKLeasingDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataSPKLeasingDB", "MasterLeasingCabangDBId");

                    b.Navigation("MasterKategoriBayaran");

                    b.Navigation("MasterKategoriPenjualan");

                    b.Navigation("MasterLeasingCabangDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKSurveiDB", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataSPKBaruDB", null)
                        .WithOne("DataSPKSurveiDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.DataSPKSurveiDB", "DataSPKBaruDBId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterLeasingCabangDB", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterLeasingDb", null)
                        .WithOne("MasterLeasingCabangDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.MasterLeasingCabangDB", "MasterLeasingDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.Pembelian", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterSupplierDB", null)
                        .WithOne("Pembelian")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.Pembelian", "MasterSupplierDBId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.PembelianPO", null)
                        .WithOne("Pembelian")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.Pembelian", "PembelianPOId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PembelianDetail", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterBarangDB", null)
                        .WithOne("PembelianDetail")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.PembelianDetail", "MasterBarangDBId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.Pembelian", null)
                        .WithOne("PembelianDetail")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.PembelianDetail", "PembelianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PembelianPO", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterSupplierDB", null)
                        .WithOne("PembelianPO")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.PembelianPO", "MasterSupplierDBId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PembelianPODetail", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterBarangDB", null)
                        .WithOne("PembelianPODetail")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.PembelianPODetail", "MasterBarangDBId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.PembelianPO", null)
                        .WithOne("PembelianPODetail")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.PembelianPODetail", "PembelianPOId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.Penjualan", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.CustomerDB", null)
                        .WithOne("Penjualan")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.Penjualan", "CustomerDBId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.DataSPKBaruDB", null)
                        .WithOne("Penjualan")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.Penjualan", "DataSPKBaruDBId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterKategoriPenjualan", null)
                        .WithOne("Penjualan")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.Penjualan", "MasterKategoriPenjualanId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterLeasingCabangDB", null)
                        .WithOne("Penjualan")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.Penjualan", "MasterLeasingCabangDBId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PenjualanDetail", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.Penjualan", null)
                        .WithOne("PenjualanDetail")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.PenjualanDetail", "PenjualanId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.StokUnit", null)
                        .WithOne("PenjualanDetail")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.PenjualanDetail", "StokUnitId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PenjualanPiutang", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.PenjualanDetail", null)
                        .WithOne("PenjualanPiutang")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.PenjualanPiutang", "PenjualanDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PermohonanFakturDB", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.PenjualanDetail", null)
                        .WithOne("PermohonanFakturDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.PermohonanFakturDB", "PenjualanDetailId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.STNKDB", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.PermohonanFakturDB", null)
                        .WithOne("STNKDB")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.STNKDB", "PermohonanFakturDBId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.StokUnit", b =>
                {
                    b.HasOne("SmmCoreDDD2019.Domain.Entities.MasterBarangDB", null)
                        .WithOne("StokUnit")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.StokUnit", "MasterBarangDBId");

                    b.HasOne("SmmCoreDDD2019.Domain.Entities.PembelianDetail", null)
                        .WithOne("StokUnit")
                        .HasForeignKey("SmmCoreDDD2019.Domain.Entities.StokUnit", "PembelianDetailId");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataAccount", b =>
                {
                    b.Navigation("AccountingDataJournal");

                    b.Navigation("AccountingDataSaldoAwal");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataJournalHeader", b =>
                {
                    b.Navigation("AccountingDataJournal");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataMataUang", b =>
                {
                    b.Navigation("AccountingDataAccount");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingDataPeriode", b =>
                {
                    b.Navigation("AccountingDataJournalHeader");

                    b.Navigation("AccountingDataSaldoAwal");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.AccountingTipeJournal", b =>
                {
                    b.Navigation("AccountingDataBuktiTransaksi");

                    b.Navigation("AccountingDataJournalHeader");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.CustomerDB", b =>
                {
                    b.Navigation("Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKonsumenAvalist", b =>
                {
                    b.Navigation("DataKontrakSurvei");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakKredit", b =>
                {
                    b.Navigation("DataKontrakAngsuran");

                    b.Navigation("DataKontrakAsuransi");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataKontrakSurvei", b =>
                {
                    b.Navigation("DataKontrakKredit");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawai", b =>
                {
                    b.Navigation("DataPegawaiDataAbsensi");

                    b.Navigation("DataPegawaiDataAward");

                    b.Navigation("DataPegawaiDataJabatan");

                    b.Navigation("DataPegawaiDataKeluarga");

                    b.Navigation("DataPegawaiDataOrmas");

                    b.Navigation("DataPegawaiDataPribadi");

                    b.Navigation("DataPegawaiDataRiwayatPekerjaan");

                    b.Navigation("DataPegawaiDataRiwayatPelatihan");

                    b.Navigation("DataPegawaiDataRiwayatPendidikan");

                    b.Navigation("DataPegawaiFoto");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPegawaiJenisAbsensi", b =>
                {
                    b.Navigation("DataPegawaiDataAbsensi");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataPerusahaan", b =>
                {
                    b.Navigation("DataPerusahaanCabang");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.DataSPKBaruDB", b =>
                {
                    b.Navigation("DataSPKKendaraanDB");

                    b.Navigation("DataSPKKreditDB");

                    b.Navigation("DataSPKLeasingDB");

                    b.Navigation("DataSPKSurveiDB");

                    b.Navigation("Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterBarangDB", b =>
                {
                    b.Navigation("DataKontrakSurvei");

                    b.Navigation("DataSPKKendaraanDB");

                    b.Navigation("PembelianDetail");

                    b.Navigation("PembelianPODetail");

                    b.Navigation("StokUnit");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterJenisJabatan", b =>
                {
                    b.Navigation("DataPegawaiDataJabatan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterKategoriBayaran", b =>
                {
                    b.Navigation("DataSPKLeasingDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterKategoriPenjualan", b =>
                {
                    b.Navigation("DataSPKLeasingDB");

                    b.Navigation("Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterLeasingCabangDB", b =>
                {
                    b.Navigation("DataSPKLeasingDB");

                    b.Navigation("Penjualan");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterLeasingDb", b =>
                {
                    b.Navigation("MasterLeasingCabangDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterPerusahaanAsuransi", b =>
                {
                    b.Navigation("DataKontrakAsuransi");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.MasterSupplierDB", b =>
                {
                    b.Navigation("Pembelian");

                    b.Navigation("PembelianPO");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.Pembelian", b =>
                {
                    b.Navigation("PembelianDetail");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PembelianDetail", b =>
                {
                    b.Navigation("StokUnit");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PembelianPO", b =>
                {
                    b.Navigation("Pembelian");

                    b.Navigation("PembelianPODetail");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.Penjualan", b =>
                {
                    b.Navigation("PenjualanDetail");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PenjualanDetail", b =>
                {
                    b.Navigation("PenjualanPiutang");

                    b.Navigation("PermohonanFakturDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.PermohonanFakturDB", b =>
                {
                    b.Navigation("BPKBDB");

                    b.Navigation("STNKDB");
                });

            modelBuilder.Entity("SmmCoreDDD2019.Domain.Entities.StokUnit", b =>
                {
                    b.Navigation("PenjualanDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
